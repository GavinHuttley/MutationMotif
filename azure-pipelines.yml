trigger:
  - master

variables:
  CODECOV_TOKEN: 655fb974-50d3-4219-8622-24671339d710
  CIBW_BUILD: cp36-* cp37-* cp38-*
  CIBW_BEFORE_BUILD: python -m pip install --upgrade pip

jobs:
- job: TESTING
  displayName: ubuntu-latest
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'

  steps:
  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH

  - bash: conda create --yes --quiet --name myEnvironment
    displayName: Create Anaconda environment

  - bash: |
      source activate myEnvironment
      conda install --yes --quiet --name myEnvironment python=$PYTHON_VERSION
      conda install --yes --quiet --name myEnvironment -c plotly plotly-orca rpy2 pytest
    displayName: Install Anaconda packages
  - bash: |
      source activate myEnvironment
      pip install --upgrade pip
      pip install .[dev] codecov
      tox -e py36
      codecov
    displayName: Test Python 3.6
- job: Linux_Test_py36
  pool: {vmImage: 'ubuntu-latest'}
  steps:
    - bash: |
        conda init bash
    - bash: |
        conda create --yes --quiet --name myenv python=3.6
        source activate myenv
        conda install -y -c plotly plotly plotly-orca rpy2
        python3 -m pip3 install --upgrade pip
        python3 -m pip3 install .[dev] codecov
        tox -e py36
        codecov
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: '**/junit-*.xml'
        testRunTitle: 'Publish test results for Linux Python 3.6'
        failTaskOnFailedTests: true
- job: Linux_Test_py37
  pool: {vmImage: 'ubuntu-latest'}
  steps:
    - task: UsePythonVersion@0
    - bash: |
        python -m pip install --upgrade pip
        python -m pip install .[dev] codecov
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
    - bash: |
        tox -e py37
        codecov
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: '**/junit-*.xml'
        testRunTitle: 'Publish test results for Linux Python 3.7'
        failTaskOnFailedTests: true
- job: Linux_Test_py38
  pool: {vmImage: 'ubuntu-latest'}
  steps:
    - task: UsePythonVersion@0
    - bash: |
        python -m pip install --upgrade pip
        python -m pip install .[dev] codecov
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.8'
    - bash: |
        tox -e py38
        codecov
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: '**/junit-*.xml'
        testRunTitle: 'Publish test results for Linux Python 3.8'
        failTaskOnFailedTests: true
- job: MacOS_Test_py36
  pool: {vmImage: 'macos-latest'}
  steps:
    - task: UsePythonVersion@0
    - bash: |
        python -m pip install --upgrade pip
        python -m pip install .[dev] codecov
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.6'
    - bash: |
        tox -e py36
        codecov
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: '**/junit-*.xml'
        testRunTitle: 'Publish test results for MacOS Python 3.6'
        failTaskOnFailedTests: true
- job: MacOS_Test_py37
  pool: {vmImage: 'macos-latest'}
  steps:
    - task: UsePythonVersion@0
    - bash: |
        python -m pip install --upgrade pip
        python -m pip install .[dev] codecov
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
    - bash: |
        tox -e py37
        codecov
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: '**/junit-*.xml'
        testRunTitle: 'Publish test results for MacOS Python 3.7'
        failTaskOnFailedTests: true
- job: MacOS_Test_py38
  pool: {vmImage: 'macos-latest'}
  steps:
    - task: UsePythonVersion@0
    - bash: |
        python -m pip install --upgrade pip
        python -m pip install .[dev] codecov
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.8'
    - bash: |
        tox -e py38
        codecov
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: '**/junit-*.xml'
        testRunTitle: 'Publish test results for MacOS Python 3.8'
        failTaskOnFailedTests: true
- job: Windows_Test_py37
  pool: {vmImage: 'windows-latest'}
  steps:
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.7', architecture: x86}}
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.7', architecture: x64}}
    - bash: |
        python -m pip install --upgrade pip
        python -m pip install .[dev] codecov
        tox -e py37
        codecov
    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: '**/junit-*.xml'
        testRunTitle: 'Publish test results for Windows Python 3.8'
        failTaskOnFailedTests: true

- job: Linux_Build
  pool: {vmImage: 'ubuntu-latest'}
  steps: 
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.6'}}
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.7'}}
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.8'}}
    - bash: |
        python -m pip install --upgrade pip
        python -m pip install cibuildwheel
        cibuildwheel --output-dir wheelhouse .
        python setup.py sdist
        cp dist/*.gz wheelhouse/.
    - task: PublishBuildArtifacts@1
      inputs: {pathtoPublish: 'wheelhouse'}

- job: MacOS_Build
  pool: {vmImage: 'macos-latest'}
  steps: 
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.6'}}
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.7'}}
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.8'}}
    - bash: |
        python -m pip install --upgrade pip
        python -m pip install cibuildwheel
        cibuildwheel --output-dir wheelhouse .
    - task: PublishBuildArtifacts@1
      inputs: {pathtoPublish: 'wheelhouse'}

- job: Windows_Build
  pool: {vmImage: 'windows-latest'}
  steps:
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.6', architecture: x86}}
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.6', architecture: x64}}
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.7', architecture: x86}}
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.7', architecture: x64}}
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.8', architecture: x86}}
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.8', architecture: x64}}
    - bash: |
        python -m pip install --upgrade pip
        python -m pip install cibuildwheel
        cibuildwheel --output-dir wheelhouse .
    - task: PublishBuildArtifacts@1
      inputs: {pathtoPublish: 'wheelhouse'}
